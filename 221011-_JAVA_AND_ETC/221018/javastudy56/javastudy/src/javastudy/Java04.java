package javastudy;

public class Java04 { // 설계도

    // 1. 선언
    public static void main(String args[]) { 

        /*
        - public: 접근 제한자, 아무나 접근할 수 있는 메소드라는 뜻
        - static: 객체 생성 없이 사용 가능한 메서드
        - void: main() 메서드를 실행한 후 리턴해줄 값이 없음
        - main(): 반드시 1개는 존재해야 하는 메서드
        - String args[]: 문자열을 저장하는 배열을 의미하는 매개변수
        */ 

        // 2. 처리
        int bno = 11; // 11이란 값을 bno란 기억장소에 저장해 두세요
        String name = "홍길동";
        /* 뱀발: String만 대문자인 이유는,
        사실 String 변수 역시 String이라는 자바 내부
        라이브러리에 정의되어 있는 클래스의 객체이기 때문입니다.
        앞으로 객체 지향을 열심히 하다 보면 알게 되지만,
        실상은 자료형과 클래스의 차이는 그다지 크지 않습니다.
        클래스 정의 파트 밖에서는 거의 똑같이 쓰게 될 겁니다. */
        int kor = 100;
        int eng = 100;
        int mat = 100;
        int tot = kor + eng + mat; // 세 기억장소에 저장된 값을 가지고 와서 더할 것
        // 이와 같은 연산을 산술연산이라 한다.
        // +: 더하기, -: 빼기, *: 곱하기, /: 나누기, %: 나눈 후의 나머지
        // 이 중에 %의 존재를 알아 두면 쓸모가 아주 많으니 기억해 두도록 합시다.
        double avg = tot / 3.; // 실수가 되려면 실수와 같이 연산해야 한다.

        // 3. 출력
        System.out.println("\t\t성적표");
        System.out.println("번호\t이름\t국어\t영어\t수학\t총점\t평균");
        // 한 줄에 출력하고 싶으면 println이 아니라 print!
        System.out.print(bno + "\t" + name + "\t" + kor + "\t" + eng + "\t" + mat + "\t" + tot + "\t" + avg);
        // print 메소드 안에 변수를 넣으면 변수에 저장된 값을 출력하라는 의미.
        /* print 메소드 안에서 변수는
        콘솔 화면에서의 출력을 위해 문자열이 됩니다.
        그리고 문자열끼리의 덧셈은 순서대로 쭉 나열해 놓는 것과 같습니다.
        즉 "가나"+"다라"="가나다라"가 된다는 뜻입니다.
        그러므로 위와 같이 bno+"\t"를 하게 되면
        bno의 값을 문자열화한 "11"과 제어문자인 "\t"를 더하여
        "11\t"가 되므로 출력은 11 다음에
        탭을 삽입한 형태가 되는 것입니다. */
    }

}
